#!/bin/zsh
#
# The MIT License (MIT)
#
# Copyright (c) 2013 Colin Wetherbee
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

function ip4_to_num
{
    ip=$1
    IFS=. read -r a b c d <<< "$ip"
    print $((a * 256 ** 3 + b * 256 ** 2 + c * 256 + d))
}

function ip4_overlap
{
    local range=$1
    local ip=$2

    IFS=/ read -r net mask <<< "$range"

    if [[ -z $net || -z $mask ]]
    then
        if [[ $range == $ip ]]
        then
            return 0
        else
            return 1
        fi
    fi

    range_masked=$(( $(ip4_to_num $range) >> $mask ))
    ip_masked=$(( $(ip4_to_num $ip) >> $mask ))

    if [[ $range_masked == $ip_masked ]]
    then
        return 0
    else
        return 1
    fi
}

BLACKHOLES_FILE=blackholes.txt
TMP_FILE=.blackholes.txt

if [[ ! -r $BLACKHOLES_FILE ]]
then
    print "Blackholes file '$BLACKHOLES_FILE' not found" >&2
    exit 1
fi

files=(/var/log/auth.log*)
text_files=()
gzip_files=()

for file in $files
do
    # Get the file's MIME type
    type=$(file -ib "$file" | sed 's/;.*$//')
    print "$file: $type"
    if [[ $type == "text/plain" ]]
    then
        text_files+=$file
    elif [[ $type == "application/gzip" ||
            $type == "application/x-gzip" ]]
    then
        gzip_files+=$file
    else
        print "Unknown file type '$type' for file: $file" >&2
    fi
done

new_ips=( $(zcat $gzip_files | ./print_failures $text_files) )
ips=( $(cat "$BLACKHOLES_FILE") )

for new_ip in $new_ips
do
    local found=0
    for ip in $ips
    do
        if ip4_overlap $ip $new_ip
        then
            found=1
            break
        fi
    done

    if [[ $found -eq 0 ]]
    then
        ips+=$new_ip
    fi
done

for ip in $ips
do
    print $ip
done | sort -V > $TMP_FILE

mv -f "$TMP_FILE" "$BLACKHOLES_FILE"
